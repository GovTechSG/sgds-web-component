:host {
  --sgds-spinner-bg: var(--sgds-primary-surface-default);
  display: inline-flex;
}
/* variant prop is deprecated in 3.5.5 */
:host([variant="neutral"]) {
  --sgds-spinner-bg: var(--sgds-neutral-surface-default);
}
:host([tone="neutral"]) {
  --sgds-spinner-bg: var(--sgds-surface-inverse);
}
:host([tone="inverse"]) {
  --sgds-spinner-bg: var(--sgds-surface-default);
}
:host([tone="fixed-light"]) {
  --sgds-spinner-bg: var(--sgds-surface-fixed-light);
}
:host([tone="fixed-dark"]) {
  --sgds-spinner-bg: var(--sgds-surface-fixed-dark);
}

.spinner-wrapper {  
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--sgds-gap-2-xs);
}
.spinner-wrapper.horizontal{
  flex-direction: row;
}
.spinner {
  --border-thickness: 4px;
  display: inline-flex;
  border-radius: 50%;
  width: var(--sgds-dimension-32);
  height: var(--sgds-dimension-32);
  animation: spinner 0.75s linear infinite;
  border: var(--border-thickness) solid var(--sgds-bg-translucent);
  border-right: var(--border-thickness) solid var(--sgds-spinner-bg);
  color: var(--sgds-spinner-color);
}

.spinner-xs {
  --border-thickness: 2px;
  width: var(--sgds-dimension-16);
  height: var(--sgds-dimension-16);
}

.spinner-sm {
  --border-thickness: 3px;
  width: var(--sgds-dimension-24);
  height: var(--sgds-dimension-24);
}

.spinner-lg {
  --border-thickness: 6px;
  width: var(--sgds-dimension-48);
  height: var(--sgds-dimension-48);
}
.spinner-xl {
  --border-thickness: 8px;
  width: var(--sgds-dimension-64);
  height: var(--sgds-dimension-64);
}

.spinner-label {
  font-size: var(--sgds-font-size-1);
  color: var(--sgds-neutral-color-default);
}

@media (prefers-reduced-motion: reduce) {
  .spinner {
    animation-duration: 1.5s;
  }
}

/*! CSS Used keyframes */
@keyframes spinner {
  to {
    transform: rotate(1turn);
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
