{"version":3,"file":"datepicker-calendar.js","sourceRoot":"","sources":["datepicker-calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { format, isAfter, isEqual } from \"date-fns\";\nimport { HTMLTemplateResult, html } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport SgdsElement from \"../../base/sgds-element\";\nimport { createYearViewArray, setTimeToNoon } from \"../../utils/time\";\nimport { watch } from \"../../utils/watch\";\nimport { ViewEnum } from \"./types\";\nimport datepickerCalendarStyle from \"./datepicker-calendar.css\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nconst TODAY_DATE = new Date();\n\nconst keyPressAction = {\n  ArrowUp: {\n    days: -7,\n    months: -3,\n    years: -3\n  },\n  ArrowDown: {\n    days: 7,\n    months: 3,\n    years: 3\n  },\n  ArrowRight: {\n    days: 1,\n    months: 1,\n    years: 1\n  },\n  ArrowLeft: {\n    days: -1,\n    months: -1,\n    years: -1\n  }\n};\nexport class DatepickerCalendar extends SgdsElement {\n  static styles = [datepickerCalendarStyle];\n\n  /** @internal */\n  static DAY_LABELS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  /** @internal */\n  static daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  /** @internal */\n  static MONTHVIEW_LABELS = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n\n  /** @internal */\n  @property({ type: Array }) selectedDate: Date[] = [];\n\n  /** @internal */\n  @property({ attribute: false }) displayDate: Date;\n\n  /** @internal */\n  @property({ type: String }) minDate?: string;\n\n  /** @internal */\n  @property({ type: String }) maxDate?: string;\n\n  /** @internal */\n  @property({ type: String, reflect: true }) mode: \"single\" | \"range\" = \"single\";\n\n  private focusedDate: Date;\n\n  /** @internal */\n  @property() view: ViewEnum;\n\n  /** @internal */\n  @property({ type: Boolean }) show: boolean;\n\n  @property()\n  focusedTabIndex: number;\n\n  /**Shifts focus from Input to Calendar */\n  public focusOnCalendar(toBlurEl: HTMLElement) {\n    toBlurEl.blur();\n    this._focusOnCalendarCell();\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.addEventListener(\"keydown\", this._handleKeyPress);\n  }\n\n  updated() {\n    /** For KeyboardNavigation (switching months) and ClickNavigation:\n     * Runs after render has completed and td of next month has appeared.\n     * For the case when calendar view changes to the next month\n     * */\n\n    if (this.focusedTabIndex === 3) {\n      this._focusOnCalendarCell();\n    }\n  }\n\n  @watch(\"displayDate\")\n  _updateFocusedDate() {\n    this.focusedDate = setTimeToNoon(this.displayDate);\n    if (this.focusedDate.getFullYear() < 1900) {\n      this.focusedDate.setFullYear(1900);\n    }\n  }\n\n  private _setFocusedDate(shift: number) {\n    const currentFocusedDate = this.focusedDate.getDate();\n    const currentFocusedMonth = this.focusedDate.getMonth();\n    const currentFocusedYear = this.focusedDate.getFullYear();\n    switch (this.view) {\n      case \"days\": {\n        const newFocusedDate = setTimeToNoon(\n          new Date(currentFocusedYear, currentFocusedMonth, currentFocusedDate + shift)\n        );\n        if (isAfter(newFocusedDate, new Date(0, 0, 1, 12)) || isEqual(newFocusedDate, new Date(0, 0, 1, 12)))\n          this.focusedDate = newFocusedDate;\n        break;\n      }\n      case \"months\": {\n        const newFocusedDate = setTimeToNoon(\n          new Date(currentFocusedYear, currentFocusedMonth + shift, currentFocusedDate)\n        );\n\n        if (isAfter(newFocusedDate, new Date(0, 0, 1, 12)) || isEqual(newFocusedDate, new Date(0, 0, 1, 12))) {\n          this.focusedDate = newFocusedDate;\n        }\n        break;\n      }\n      case \"years\": {\n        const newFocusedDate = setTimeToNoon(\n          new Date(currentFocusedYear + shift, currentFocusedMonth, currentFocusedDate)\n        );\n        if (newFocusedDate.getFullYear() >= 1900) {\n          this.focusedDate = newFocusedDate;\n        }\n        break;\n      }\n    }\n  }\n  private _handleEnterDateKeyboard(event: KeyboardEvent) {\n    const targetElement = event.composedPath()[0] as HTMLElement;\n    if (targetElement.classList.contains(\"disabled\")) return;\n\n    switch (this.view) {\n      case \"days\":\n        this._onClickDay(event);\n        break;\n      case \"months\": {\n        const { month } = targetElement.dataset;\n        this._onClickMonth(parseInt(month));\n        break;\n      }\n      case \"years\": {\n        const { year } = targetElement.dataset;\n        this._onClickYear(parseInt(year));\n      }\n    }\n  }\n  private _handleKeyPress(event: KeyboardEvent) {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      this._handleEnterDateKeyboard(event);\n      return;\n    }\n    if (event.key === \"Tab\") {\n      const targetEl: HTMLElement = this._getFocusedTarget();\n      if (this.focusedTabIndex !== 3) targetEl.blur();\n      return;\n    }\n    if (event.key.includes(\"Arrow\")) {\n      event.preventDefault();\n      this._blurCalendarCell();\n      const keyShiftObject = keyPressAction[event.key];\n      const shiftNumber = keyShiftObject[this.view];\n\n      this._setFocusedDate(shiftNumber);\n\n      this._focusOnCalendarCell();\n    }\n  }\n\n  private _generateIncrementDates(): Date[] {\n    const start = setTimeToNoon(this.selectedDate[0]);\n\n    if (this.selectedDate.length < 2) {\n      return [start];\n    }\n\n    const end = setTimeToNoon(this.selectedDate[1]);\n    const arr: Date[] = [];\n    if (start.getTime() < end.getTime()) {\n      for (let dt = start; dt <= end; dt.setDate(dt.getDate() + 1)) {\n        arr.push(new Date(dt));\n      }\n    } else {\n      for (let dt = end; dt <= start; dt.setDate(dt.getDate() + 1)) {\n        arr.push(new Date(dt));\n      }\n    }\n    return arr;\n  }\n\n  private _onClickDay(event: MouseEvent | KeyboardEvent) {\n    const { day, date } = (event.composedPath()[0] as HTMLTableCellElement).dataset;\n\n    const displayDateClone = new Date(this.displayDate);\n    displayDateClone.setDate(parseInt(day));\n    /** update new focused date for mouse click */\n    if (event.type === \"click\") {\n      this.focusedDate = setTimeToNoon(new Date(date));\n    }\n\n    if (this.mode === \"single\") {\n      // Single mode: Select a single date\n\n      this.selectedDate = [displayDateClone];\n\n      // Emit event with selected date\n      this.emit(\"sgds-selectdates\", { detail: this.selectedDate });\n    } else if (this.mode === \"range\") {\n      // Range mode: Select a range of dates\n      const selectedDates = [...this.selectedDate];\n\n      if (selectedDates.length === 0 || selectedDates.length === 2) {\n        // No dates selected yet or both dates already selected,\n        // start a new range by clearing the selected dates array\n        selectedDates.length = 0;\n      }\n\n      // Add the selected date to the range\n      selectedDates.push(displayDateClone);\n\n      // Update the selectedDate property\n      this.selectedDate = selectedDates;\n\n      // Emit event with the range of selected dates\n      this.emit(\"sgds-selectdates\", { detail: this.selectedDate });\n    }\n\n    // Check if the selected date is before minDate or after maxDate\n    const minimumDate = this.minDate ? setTimeToNoon(new Date(this.minDate)) : null;\n    const maximumDate = this.maxDate ? setTimeToNoon(new Date(this.maxDate)) : null;\n\n    const selectedDate = setTimeToNoon(displayDateClone);\n    if ((minimumDate && selectedDate < minimumDate) || (maximumDate && selectedDate > maximumDate)) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  private _onClickMonth(month: number, year: number = this.focusedDate.getFullYear()) {\n    const displayDateClone = new Date(this.displayDate);\n    this.view = \"days\";\n    displayDateClone.setMonth(month);\n    displayDateClone.setFullYear(year);\n    this.displayDate = displayDateClone;\n    this.emit(\"sgds-view\", { detail: this.view });\n    //once clicked, should change view to days, and hold value and change view\n    this.emit(\"sgds-selectmonth\", { detail: this.displayDate });\n  }\n\n  private _onClickYear(year: number) {\n    const displayDateClone = new Date(this.displayDate);\n    displayDateClone.setFullYear(year);\n    this.displayDate = displayDateClone;\n    this.view = \"months\";\n    this.emit(\"sgds-view\", { detail: this.view });\n\n    this.emit(\"sgds-selectyear\", { detail: this.displayDate });\n  }\n\n  private _getFocusedTarget(): HTMLElement {\n    const queryObj = {\n      days: `td[data-date=\"${this.focusedDate.toISOString()}\"]`,\n      months: `button[data-month=\"${this.focusedDate.getMonth()}\"][data-year=\"${this.focusedDate.getFullYear()}\"]`,\n      years: `button[data-year=\"${this.focusedDate.getFullYear()}\"]`\n    };\n    const queryString = queryObj[this.view];\n    const targetEl: HTMLElement = this.shadowRoot.querySelector(`${queryString}`);\n    return targetEl;\n  }\n  private _blurCalendarCell() {\n    const targetEl = this._getFocusedTarget();\n    targetEl.setAttribute(\"tabindex\", \"-1\");\n    targetEl.blur();\n  }\n  private _focusOnCalendarCell() {\n    const targetEl = this._getFocusedTarget();\n    if (targetEl) {\n      targetEl.setAttribute(\"tabindex\", \"3\");\n      targetEl.focus();\n      this.emit(\"sgds-update-focus\", { detail: this.focusedDate });\n    } else {\n      /** Change month view */\n      this.emit(\"sgds-change-calendar\", { detail: this.focusedDate });\n    }\n  }\n  private _generateDays() {\n    const selectedDates = this.selectedDate.map(d => setTimeToNoon(d));\n\n    const rangeSelectedDates = this._generateIncrementDates();\n    const minimumDate = this.minDate ? setTimeToNoon(new Date(this.minDate)) : null;\n    const maximumDate = this.maxDate ? setTimeToNoon(new Date(this.maxDate)) : null;\n    const year = this.displayDate.getFullYear();\n    const month = this.displayDate.getMonth();\n    const firstDateOfMonth = new Date(year, month, 1);\n    const startingDayOfMonth = firstDateOfMonth.getDay();\n    let monthLength = DatepickerCalendar.daysInMonth[month];\n    if (month === 1) {\n      if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\n        monthLength = 29;\n      }\n    }\n\n    const weeks = [];\n    let day = 1;\n    for (let i = 0; i < 9; i++) {\n      const week = [];\n      for (let j = 0; j <= 6; j++) {\n        if (day <= monthLength && (i > 0 || j >= startingDayOfMonth)) {\n          const dateObj = new Date(year, month, day, 12, 0, 0, 0);\n          const dateStr = dateObj.toISOString();\n          const beforeMinDate = minimumDate && Date.parse(dateStr) < Date.parse(minimumDate.toISOString());\n          const afterMinDate = maximumDate && Date.parse(dateStr) > Date.parse(maximumDate.toISOString());\n          const clickHandler = beforeMinDate || afterMinDate ? undefined : this._onClickDay;\n\n          const isCurrentMonth = TODAY_DATE.getMonth() === this.displayDate.getMonth();\n          const isCurrentYear = TODAY_DATE.getFullYear() === this.displayDate.getFullYear();\n          const isCurrentDay = TODAY_DATE.getDate() === day;\n\n          const isSelected =\n            selectedDates.length > 0 &&\n            rangeSelectedDates.some(d => Date.parse(dateStr) === Date.parse(d.toISOString()));\n          const isFirstSelectedDate = selectedDates.length > 0 && rangeSelectedDates[0].toISOString() === dateStr;\n          const isLastSelectedDate =\n            selectedDates.length > 1 && rangeSelectedDates[rangeSelectedDates.length - 1].toISOString() === dateStr;\n          const ariaLabel =\n            `${isCurrentDay && isCurrentMonth && isCurrentYear ? \"Today's date, \" : \"\"}` + format(dateObj, \"PPPP\");\n          week.push(\n            html`<td\n              key=${j}\n              data-date=${dateStr}\n              data-day=${day}\n              aria-label=${ariaLabel}\n              aria-current=${ifDefined(isCurrentDay && isCurrentMonth && isCurrentYear ? \"date\" : undefined)}\n              class=${classMap({\n                today: isCurrentDay && isCurrentMonth && isCurrentYear,\n                \"selected-ends\": isFirstSelectedDate || isLastSelectedDate,\n                active: isSelected,\n                disabled: beforeMinDate || afterMinDate\n              })}\n              @click=${clickHandler}\n              aria-selected=${ifDefined(isSelected ? \"true\" : undefined)}\n              tabindex=${this.focusedDate === new Date(dateStr) ? \"3\" : \"-1\"}\n              ?disabled=${beforeMinDate || afterMinDate}\n              aria-disabled=${ifDefined(beforeMinDate || afterMinDate ? \"true\" : undefined)}\n              role=\"button\"\n            >\n              ${day}\n            </td>`\n          );\n          day++;\n        } else {\n          week.push(html`<td key=${j}></td>`);\n        }\n      }\n\n      weeks.push(\n        html`<tr key=${i}>\n          ${week}\n        </tr>`\n      );\n      if (day > monthLength) {\n        break;\n      }\n    }\n\n    const dayView = html`\n      <table role=\"grid\">\n        <thead>\n          <tr>\n            ${DatepickerCalendar.DAY_LABELS.map(\n              (label: string, index: number) =>\n                html`\n                  <th key=${index} abbr=${label} scope=\"col\">\n                    <small>${label.slice(0, 3)}</small>\n                  </th>\n                `\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          ${weeks}\n        </tbody>\n      </table>\n    `;\n    return dayView;\n  }\n\n  private _generateMonths() {\n    const rangeDates = this._generateIncrementDates();\n    const selectedTime = rangeDates.map(e => setTimeToNoon(new Date(e.getFullYear(), e.getMonth())).getTime());\n\n    const year = this.displayDate.getFullYear();\n\n    const monthView = html`\n      <div class=\"sgds monthpicker\">\n        ${DatepickerCalendar.MONTHVIEW_LABELS.map((m, idx) => {\n          const isCurrentMonth = idx === TODAY_DATE.getMonth() && year === TODAY_DATE.getFullYear();\n          const time = setTimeToNoon(new Date(year, idx)).getTime();\n          const isFirstSelectedMonth = rangeDates[0].getMonth() === idx;\n          const isFirstSelectedYear = rangeDates[0].getFullYear() === year;\n          const isLastSelectedMonth = rangeDates[rangeDates.length - 1].getMonth() === idx;\n          const isLastSelectedYear = rangeDates[rangeDates.length - 1].getFullYear() === year;\n          const ariaLabel = isCurrentMonth ? `Current month ${m} ${year}` : `${m} ${year}`;\n          return html` <button\n            class=${classMap({\n              active: selectedTime.includes(time),\n              today: isCurrentMonth,\n              month: true,\n              \"selected-ends\":\n                (isFirstSelectedMonth && isFirstSelectedYear) || (isLastSelectedMonth && isLastSelectedYear)\n            })}\n            @click=${() => this._onClickMonth(idx)}\n            data-month=${idx}\n            data-year=${year}\n            tabindex=\"3\"\n            aria-selected=${selectedTime.includes(time)}\n            aria-label=${ariaLabel}\n          >\n            ${m.slice(0, 3)}\n          </button>`;\n        })}\n      </div>\n    `;\n    return monthView;\n  }\n\n  private _generateYears() {\n    const selectedYears = this._generateIncrementDates().map(e => e.getFullYear());\n    const CURRENT_YEAR = TODAY_DATE.getFullYear();\n\n    const yearArray = createYearViewArray(this.displayDate, CURRENT_YEAR);\n\n    const yearView = html`\n      <div class=\"sgds yearpicker\">\n        ${yearArray.map(y => {\n          const isFirstSelectedYear = selectedYears[0] === y;\n          const isLastSectedYear = selectedYears[selectedYears.length - 1] === y;\n          return html`\n            <button\n              class=${classMap({\n                active: selectedYears.includes(y),\n                year: true,\n                today: CURRENT_YEAR === y,\n                \"selected-ends\": isFirstSelectedYear || isLastSectedYear\n              })}\n              @click=${() => this._onClickYear(y)}\n              data-year=${y}\n              tabindex=\"3\"\n              ?disabled=${y < 1900}\n              aria-selected=${selectedYears.includes(y)}\n              aria-label=${ifDefined(CURRENT_YEAR === y ? `Current year, ${y}` : undefined)}\n            >\n              ${y}\n            </button>\n          `;\n        })}\n      </div>\n    `;\n    return yearView;\n  }\n  render() {\n    let viewContent: HTMLTemplateResult;\n\n    switch (this.view) {\n      case \"days\":\n        viewContent = html` ${this._generateDays()} `;\n        break;\n      case \"months\":\n        viewContent = html` ${this._generateMonths()} `;\n        break;\n      case \"years\":\n        viewContent = html` ${this._generateYears()} `;\n        break;\n      default:\n        viewContent = html` ${this._generateDays()} `; // Set a default view\n        break;\n    }\n\n    return html` <div class=\"datepicker-body\">${viewContent}</div> `;\n  }\n}\n\nexport default DatepickerCalendar;\n"]}