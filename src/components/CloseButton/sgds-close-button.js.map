{"version":3,"file":"sgds-close-button.js","sourceRoot":"","sources":["sgds-close-button.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,WAAW,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,iBAAiB,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD;;;;;GAKG;AACH,MAAM,OAAO,eAAgB,SAAQ,WAAW;IAAhD;;QAG6C,cAAS,GAAG,cAAc,CAAC;QAEtE,wCAAwC;QACX,SAAI,GAAgB,IAAI,CAAC;QAO9C,kBAAa,GAAG,GAAG,EAAE;YAC3B,OAAO;QACT,CAAC,CAAC;IAcJ,CAAC;IArBS,YAAY;QAClB,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IAMD,MAAM;QACJ,OAAO,IAAI,CAAA;;gBAEC,QAAQ,CAAC;YACf,WAAW,EAAE,IAAI;YACjB,CAAC,aAAa,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI;SACtC,CAAC;qBACW,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;iBAC7B,IAAI,CAAC,YAAY;;KAE7B,CAAC;IACJ,CAAC;;AA3BM,sBAAM,GAAG,CAAC,iBAAiB,CAAC,AAAtB,CAAuB;AAEO;IAA1C,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;kDAA4B;AAGzC;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;6CAA0B;AAyBxD,eAAe,eAAe,CAAC","sourcesContent":["import { property } from \"lit/decorators.js\";\nimport SgdsElement from \"../../base/sgds-element\";\nimport { html } from \"lit\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport closeButtonStyles from \"./close-button.css\";\nimport { classMap } from \"lit/directives/class-map.js\";\n/**\n * @summary Close button for closing actions. Used in Modal, Drawer, Alert and Toast.\n *\n * @cssprop --sgds-close-btn-border-radius - The border radius of close button border\n *\n */\nexport class SgdsCloseButton extends SgdsElement {\n  static styles = [closeButtonStyles];\n\n  @property({ type: String, reflect: true }) ariaLabel = \"Close button\";\n\n  /** Specifies a large or small button */\n  @property({ reflect: true }) size: \"sm\" | \"md\" = \"md\";\n\n  private _handleClick() {\n    this.removeEventListener(\"click\", this._clickHandler);\n    this.addEventListener(\"click\", this._clickHandler);\n  }\n\n  private _clickHandler = () => {\n    return;\n  };\n\n  render() {\n    return html`\n      <button\n        class=${classMap({\n          \"btn-close\": true,\n          [`btn-close-${this.size}`]: this.size\n        })}\n        aria-label=${ifDefined(this.ariaLabel)}\n        @click=${this._handleClick}\n      ></button>\n    `;\n  }\n}\n\nexport default SgdsCloseButton;\n"]}