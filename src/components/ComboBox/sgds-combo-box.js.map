{"version":3,"file":"sgds-combo-box.js","sourceRoot":"","sources":["sgds-combo-box.ts"],"names":[],"mappings":"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","sourcesContent":["import { ScopedElementsMixin } from \"@open-wc/scoped-elements/lit-element.js\";\nimport { html } from \"lit\";\nimport { property, state } from \"lit/decorators.js\";\nimport { ref } from \"lit/directives/ref.js\";\nimport { DropdownListElement } from \"../../base/dropdown-list-element\";\nimport { defaultValue } from \"../../utils/defaultvalue\";\nimport { watch } from \"../../utils/watch\";\nimport { SgdsDropdownItem } from \"../Dropdown/sgds-dropdown-item\";\nimport { SgdsInput } from \"../Input/sgds-input\";\nimport comboBoxStyle from \"./combo-box.css\";\nimport dropdownStyle from \"../Dropdown/dropdown.css\";\ntype FilterFunction = (inputValue: string, menuItem: string) => boolean;\n\n/**\n * @summary ComboBox component is used for users to make one or more selections from a list.\n *\n * @slot icon - slot for form control icon to be displayed on the right of the input box.\n *\n * @event sgds-select - Emitted when the combo box's selected value changes.\n * @event sgds-input -  Emitted when user input is received and its value changes.\n */\nexport class SgdsComboBox extends ScopedElementsMixin(DropdownListElement) {\n  static styles = [...DropdownListElement.styles, comboBoxStyle, dropdownStyle];\n  /**@internal */\n  static get scopedElements() {\n    return {\n      \"sgds-input\": SgdsInput,\n      \"sgds-dropdown-item\": SgdsDropdownItem\n    };\n  }\n  constructor() {\n    super();\n    /**@internal */\n    this.modifierOpt = [\n      {\n        name: \"offset\",\n        options: {\n          offset: [0, 10]\n        }\n      }\n    ];\n  }\n  /** The input's label  */\n  @property({ reflect: true }) label = \"\";\n  /** The input's hint text below the label */\n  @property({ reflect: true }) hintText = \"\";\n  /**The input's name attribute */\n  @property({ reflect: true }) name: string;\n  /**The input's placeholder text. */\n  @property({ type: String, reflect: true }) placeholder = \"placeholder\";\n  /**Autofocus the input */\n  @property({ type: Boolean, reflect: true }) autofocus = false;\n  /**Disables the input. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n  /**Makes the input a required field. */\n  @property({ type: Boolean, reflect: true }) required = false;\n  /**Makes the input readonly. */\n  @property({ type: Boolean, reflect: true }) readonly = false;\n  /**The input's value attribute. */\n  @property({ reflect: true }) value = \"\";\n  /**Gets or sets the default value used to reset this element. The initial value corresponds to the one originally specified in the HTML that created this element. */\n  @defaultValue()\n  defaultValue = \"\";\n\n  /** Allows invalidFeedback, invalid and valid styles to be visible with the input */\n  @property({ type: Boolean, reflect: true }) hasFeedback = false;\n  /**Feedback text for error state when validated */\n  @property({ type: String, reflect: true }) invalidFeedback = \"\";\n\n  /** Marks the component as invalid. Replace the pseudo :invalid selector for absent in custom elements */\n  @property({ type: Boolean, reflect: true }) invalid = false;\n  /** Marks the input as invalid. Replace the pseudo :valid selector for absent in custom elements */\n  @property({ type: Boolean, reflect: true }) valid = false;\n\n  /**The list of items to display in the dropdown. */\n  @property({ type: Array }) menuList: string[] = [];\n\n  /**The function used to determine if a menu item should be shown in the menu list, given the user's input value. */\n  @property()\n  filterFunction: FilterFunction = (inputValue: string, menuItem: string) => {\n    const itemLowerCase = menuItem.toLowerCase();\n    const valueLower = inputValue.toLowerCase();\n    return itemLowerCase.startsWith(valueLower);\n  };\n\n  /**@internal */\n  @state()\n  private filteredMenuList: string[] = [];\n\n  /**@internal */\n  @watch(\"value\")\n  _handleFilterMenu() {\n    this.filteredMenuList = this.menuList.filter(item => this.filterFunction.call(null, this.value, item));\n\n    if (!this.myDropdown || !this.bsDropdown) return;\n\n    // To hide dropdown menu when filtered menuList is empty\n    if (this.filteredMenuList.length === 0) {\n      this.hideMenu();\n    } else if (this.menuIsOpen) {\n      this.showMenu();\n    }\n  }\n\n  private _handleInputChange(e: CustomEvent) {\n    this.showMenu();\n    this.value = (e.target as SgdsInput).value;\n  }\n\n  private _handleSelectChange(e: KeyboardEvent | MouseEvent) {\n    this.value = (e.target as HTMLButtonElement).innerText;\n    this.handleSelectSlot(e);\n  }\n\n  render() {\n    return html`\n      <div class=\"sgds combobox dropdown\">\n        <sgds-input\n          class=\"dropdown-toggle\"\n          label=${this.label}\n          hintText=${this.hintText}\n          name=${this.name}\n          ${ref(this.myDropdown)}\n          @click=${() => (this.filteredMenuList.length > 0 ? this.showMenu() : this.hideMenu())}\n          placeholder=${this.placeholder}\n          ?autofocus=${this.autofocus}\n          ?disabled=${this.disabled}\n          required=${this.required}\n          ?readonly=${this.readonly}\n          ?hasFeedback=${this.hasFeedback}\n          invalidfeedback=${this.invalidFeedback}\n          ?invalid=${this.invalid}\n          ?valid=${this.valid}\n          .value=${this.value}\n          @sgds-input=${this._handleInputChange}\n          role=\"combobox\"\n          aria-expanded=${this.menuIsOpen}\n          aria-autocomplete=\"list\"\n          aria-controls=${this.dropdownMenuId}\n        >\n        </sgds-input>\n        <div class=\"form-control-icon\">\n          <slot name=\"icon\"></slot>\n        </div>\n        <ul id=${this.dropdownMenuId} class=\"dropdown-menu\" part=\"menu\" tabindex=\"-1\">\n          ${this.filteredMenuList.map(\n            item => html`<sgds-dropdown-item @click=${this._handleSelectChange}>${item}</sgds-dropdown-item>`\n          )}\n        </ul>\n      </div>\n    `;\n  }\n}\n\nexport default SgdsComboBox;\n"]}