{"version":3,"file":"sgds-radio.js","sourceRoot":"","sources":["sgds-radio.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport SgdsElement from \"../../base/sgds-element\";\nimport genId from \"../../utils/generateId\";\nimport { watch } from \"../../utils/watch\";\nimport radioStyles from \"./radio.css\";\nimport formLabelStyles from \"../../styles/form-label.css\";\n/**\n * @summary Radio allows the user to select one option from a set while seeing all available options.\n *\n * @slot default - The label of the radio input\n *\n * @event sgds-focus - Emitted when the control gains focus.\n * @event sgds-blur - Emitted when the control loses focus.\n *\n * @cssprop --sgds-radio-margin-bottom - The margin-bottom of each radio. Defaults to the value of `--sgds-radio-group-gap`\n * @cssprop --sgds-radio-inline-margin-right - The margin-right of each radio when it is inlined.\n */\nexport class SgdsRadio extends SgdsElement {\n  static styles = [...SgdsElement.styles, formLabelStyles, radioStyles];\n  /**\n   * Draws the radio in a checked state\n   */\n  @property({ type: Boolean, reflect: true }) checked = false;\n\n  /** The radio's value attribute. */\n  @property() value: string;\n\n  /** Disables the radio. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Aligns the radios horizontally */\n  @property({ type: Boolean, reflect: true }) isInline = false;\n\n  /** For aria-label */\n  @property({ type: String, reflect: true }) ariaLabel = \"\";\n\n  /**Feedback text for error state when validated */\n  @property({ type: String, reflect: true }) invalidFeedback = \"\";\n  /** Allows invalidFeedback, invalid and valid styles to be visible with the input */\n  @property({ type: Boolean, reflect: true }) hasFeedback = false;\n  /** Marks the radio input as invalid. Replace the pseudo :invalid selector for absent in custom elements */\n  @property({ type: Boolean, reflect: true }) invalid = false;\n\n  private radioId: string = genId(\"radio\");\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.setInitialAttributes();\n    this.addEventListeners();\n  }\n\n  @watch(\"checked\")\n  handleCheckedChange() {\n    this.setAttribute(\"aria-checked\", this.checked ? \"true\" : \"false\");\n    this.setAttribute(\"tabindex\", this.checked ? \"0\" : \"-1\");\n  }\n\n  @watch(\"disabled\", { waitUntilFirstUpdate: true })\n  handleDisabledChange() {\n    this.setAttribute(\"aria-disabled\", this.disabled ? \"true\" : \"false\");\n  }\n\n  private handleBlur() {\n    this.emit(\"sgds-blur\");\n  }\n\n  private handleClick() {\n    if (!this.disabled) {\n      this.checked = true;\n    }\n  }\n\n  private handleFocus() {\n    this.emit(\"sgds-focus\");\n  }\n\n  private addEventListeners() {\n    this.addEventListener(\"blur\", () => this.handleBlur());\n    this.addEventListener(\"click\", () => this.handleClick());\n    this.addEventListener(\"focus\", () => this.handleFocus());\n  }\n\n  private setInitialAttributes() {\n    this.setAttribute(\"role\", \"radio\");\n    this.setAttribute(\"tabindex\", \"-1\");\n    this.setAttribute(\"aria-disabled\", this.disabled ? \"true\" : \"false\");\n  }\n\n  render() {\n    return html`\n      <div\n        class=${classMap({\n          \"form-check\": true,\n          \"form-check-inline\": this.isInline\n        })}\n        tabindex=\"-1\"\n      >\n        <input\n          class=${classMap({\n            \"form-check-input\": true,\n            \"is-invalid\": this.invalid\n          })}\n          type=\"radio\"\n          id=${ifDefined(this.radioId)}\n          value=${ifDefined(this.value)}\n          ?checked=${this.checked}\n          ?disabled=${this.disabled}\n          aria-disabled=${this.disabled ? \"true\" : \"false\"}\n          aria-checked=${this.checked ? \"true\" : \"false\"}\n          @click=${this.handleClick}\n        />\n        <label for=\"${ifDefined(this.radioId)}\" aria-label=${ifDefined(this.ariaLabel)} class=\"form-check-label\"\n          ><slot></slot\n        ></label>\n      </div>\n    `;\n  }\n}\n\nexport default SgdsRadio;\n"]}