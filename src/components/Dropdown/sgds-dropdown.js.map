{"version":3,"file":"sgds-dropdown.js","sourceRoot":"","sources":["sgds-dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import { ScopedElementsMixin } from \"@open-wc/scoped-elements/lit-element.js\";\nimport { html } from \"lit\";\nimport { property, queryAsync } from \"lit/decorators.js\";\nimport { ref } from \"lit/directives/ref.js\";\nimport { DropdownListElement } from \"../../base/dropdown-list-element\";\nimport genId from \"../../utils/generateId\";\nimport { SgdsButton } from \"../Button/sgds-button\";\nimport dropdownStyle from \"./dropdown.css\";\nexport type DropDirection = \"left\" | \"right\" | \"up\" | \"down\";\nexport type DropdownButtonVariant =\n  | \"primary\"\n  | \"secondary\"\n  | \"success\"\n  | \"danger\"\n  | \"warning\"\n  | \"info\"\n  | \"light\"\n  | \"dark\";\n\n/**\n * @summary `SgdsDropdown` toggles contextual overlays for displaying lists of links.\n * @slot default - slot for sgds-dropdown-item passed into dropdown's menu\n *\n * @csspart menu - The dropdown's menu (ul element)\n *\n * @cssprop --sgds-dropdown-z-index - The z-index of dropdown, determining its stacking order relative to other elements.\n * @cssprop --sgds-dropdown-min-width - The minimum width of dropdown\n * @cssprop --sgds-dropdown-padding-x - The left and right padding of dropdown\n * @cssprop --sgds-dropdown-padding-y - The top and bottom padding of dropdown\n * @cssprop --sgds-dropdown-spacer - The margin spacing of dropdown depending on the drop position\n * @cssprop --sgds-dropdown-font-size - The font size of dropdown\n * @cssprop --sgds-dropdown-color - The text color of dropdown\n * @cssprop --sgds-dropdown-bg - The background color of dropdown\n * @cssprop --sgds-dropdown-border-color - The border color of dropdown\n * @cssprop --sgds-dropdown-border-radius - The border radius of dropdown\n * @cssprop --sgds-dropdown-border-width - The border width of dropdown\n * @cssprop --sgds-dropdown-border-width - The border width of dropdown\n * @cssprop --sgds-dropdown-divider-bg - The background color of divider\n * @cssprop --sgds-dropdown-divider-margin-y - The top and bottom margin of divider\n * @cssprop --sgds-dropdown-item-color - The text color of dropdown item\n * @cssprop --sgds-dropdown-item-hover-color - The text color of dropdown item in hover state\n * @cssprop --sgds-dropdown-item-hover-bg - The background color of dropdown item in hover state\n * @cssprop --sgds-dropdown-item-active-color - The text color of dropdown item in active state\n * @cssprop --sgds-dropdown-item-active-bg - The background color of dropdown item in active state\n * @cssprop --sgds-dropdown-item-disabled-color - The text color of dropdown item in disabled state\n * @cssprop --sgds-dropdown-item-padding-x - The left and right padding of dropdown item\n * @cssprop --sgds-dropdown-item-padding-y - The top and bottom padding of dropdown item\n * @cssprop --sgds-dropdown-header-color - The text color of dropdown header\n * @cssprop --sgds-dropdown-header-padding-x - The left and right padding of dropdown header\n * @cssprop --sgds-dropdown-header-padding-y - The top and bottom padding of dropdown header\n *\n */\nexport class SgdsDropdown extends ScopedElementsMixin(DropdownListElement) {\n  static styles = [...DropdownListElement.styles, dropdownStyle];\n  /**@internal */\n  static get scopedElements() {\n    return {\n      \"sgds-button\": SgdsButton\n    };\n  }\n  constructor() {\n    super();\n    /**@internal */\n    this.modifierOpt = [\n      {\n        name: \"offset\",\n        options: {\n          offset: [0, 10]\n        }\n      }\n    ];\n  }\n  @property({ type: String })\n  /** Forwards value to id attribute of toggle button of Dropdown. An unique id generated by default */\n  togglerId: string = genId(\"dropdown\", \"button\");\n\n  /** Sets the text content of Dropdown button */\n  @property({ type: String })\n  togglerText = \"\";\n\n  /** Controls auto-flipping of menu */\n  @property({ type: Boolean, reflect: true, state: false })\n  noFlip = false;\n\n  /** When true, aligns right edge of menu with right edge of button */\n  @property({ type: Boolean, reflect: true, state: false })\n  menuAlignRight = false;\n\n  /** The drop position of menu relative to the toggle button */\n  @property({ type: String, reflect: true, state: false })\n  drop: DropDirection = \"down\";\n\n  /** Sets color of Dropdown button */\n  @property({ type: String, reflect: true })\n  variant: DropdownButtonVariant = \"secondary\";\n\n  /**@internal */\n  @queryAsync(\"sgds-button\")\n  private dropdownRef: Promise<SgdsButton>;\n\n  async firstUpdated() {\n    super.firstUpdated();\n    if (this.menuIsOpen) {\n      await this.dropdownRef;\n      this.showMenu();\n    }\n  }\n  render() {\n    return html`\n      <div>\n        <sgds-button\n          outlined\n          role=\"button\"\n          variant=${this.variant}\n          ?disabled=${this.disabled}\n          aria-expanded=\"${this.menuIsOpen}\"\n          aria-haspopup=\"menu\"\n          ${ref(this.myDropdown)}\n          @click=${() => this.toggleMenu()}\n          id=${this.togglerId}\n        >\n          ${this.togglerText}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-chevron-down\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n            />\n          </svg>\n        </sgds-button>\n        <div class=\"dropdown-menu\" role=\"menu\" part=\"menu\">\n          <slot id=\"default\" @click=${this.handleSelectSlot}></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\nexport default SgdsDropdown;\n"]}