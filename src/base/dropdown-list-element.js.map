{"version":3,"file":"dropdown-list-element.js","sourceRoot":"","sources":["dropdown-list-element.ts"],"names":[],"mappings":"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","sourcesContent":["import { query, state } from \"lit/decorators.js\";\nimport { DropdownElement } from \"./dropdown-element\";\nimport { SgdsDropdownItem } from \"../components\";\n\nconst ARROW_DOWN = \"ArrowDown\";\nconst ARROW_UP = \"ArrowUp\";\nconst ENTER = \"Enter\";\n\n/**\n * @event sgds-select - Emitted event when a slot item is selected\n */\nexport class DropdownListElement extends DropdownElement {\n  static styles = DropdownElement.styles;\n  /**@internal */\n  @query(\"ul.dropdown-menu\")\n  private menu: HTMLUListElement;\n\n  /** @internal */\n  @state()\n  nextDropdownItemNo = 0;\n  /** @internal */\n  @state()\n  prevDropdownItemNo = -1;\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.addEventListener(\"sgds-hide\", this._resetMenu);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.removeEventListener(\"sgds-hide\", this._resetMenu);\n  }\n\n  firstUpdated() {\n    super.firstUpdated();\n    this.addEventListener(\"keydown\", this._handleKeyboardMenuItemsEvent);\n  }\n\n  protected handleSelectSlot(e: KeyboardEvent | MouseEvent) {\n    const items = this._getActiveMenuItems();\n    const currentItemNo = items.indexOf(e.target as SgdsDropdownItem);\n    this.nextDropdownItemNo = currentItemNo + 1;\n    this.prevDropdownItemNo = currentItemNo <= 0 ? items.length - 1 : currentItemNo - 1;\n\n    /** Emitted event from SgdsDropdown element when a slot item is selected */\n    const selectedItem = e.target as SgdsDropdownItem;\n    if (!selectedItem.disabled) {\n      this.emit(\"sgds-select\");\n      this.close !== \"outside\" && this.bsDropdown.hide();\n    } else return;\n  }\n\n  private _resetMenu() {\n    this.nextDropdownItemNo = 0;\n    this.prevDropdownItemNo = -1;\n    // reset the tabindex\n    const items = this._getMenuItems();\n    items.forEach(i => {\n      i.removeAttribute(\"tabindex\");\n    });\n  }\n\n  private _handleKeyboardMenuItemsEvent(e: KeyboardEvent) {\n    const menuItems = this._getActiveMenuItems();\n    switch (e.key) {\n      case ARROW_DOWN:\n        e.preventDefault();\n        if (this.nextDropdownItemNo === menuItems.length) {\n          return this._setMenuItem(0);\n        } else {\n          return this._setMenuItem(this.nextDropdownItemNo > 0 ? this.nextDropdownItemNo : 0);\n        }\n      case ARROW_UP:\n        e.preventDefault();\n        if (this.prevDropdownItemNo < 0) {\n          return this._setMenuItem(menuItems.length - 1, false);\n        } else {\n          return this._setMenuItem(this.prevDropdownItemNo, false);\n        }\n      case ENTER:\n        if (menuItems.includes(e.target as SgdsDropdownItem)) {\n          return this.handleSelectSlot(e);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _getMenuItems(): SgdsDropdownItem[] {\n    // for case when default slot is used e.g. dropdown, mainnavdropdown\n    if (this.shadowRoot.querySelector(\"slot#default\")) {\n      return (this.shadowRoot.querySelector(\"slot#default\") as HTMLSlotElement)?.assignedElements({\n        flatten: true\n      }) as SgdsDropdownItem[];\n    }\n\n    // for case when there is no slot e.g. combobox\n    if (this.menu.hasChildNodes()) {\n      const menuItems = this.menu.children;\n\n      return [...menuItems] as SgdsDropdownItem[];\n    }\n  }\n  private _getActiveMenuItems(): SgdsDropdownItem[] {\n    return this._getMenuItems().filter(item => !item.disabled);\n  }\n\n  private _setMenuItem(currentItemIdx: number, isArrowDown = true) {\n    const items = this._getActiveMenuItems();\n    if (items.length === 0) return;\n    const item = items[currentItemIdx];\n    this.nextDropdownItemNo = currentItemIdx + 1;\n    this.prevDropdownItemNo = currentItemIdx - 1 < 0 ? items.length - 1 : currentItemIdx - 1;\n    let activeItem: SgdsDropdownItem;\n    if (item.disabled) {\n      return this._setMenuItem(isArrowDown ? this.nextDropdownItemNo : this.prevDropdownItemNo);\n    } else activeItem = item;\n\n    // focus or blur items depending on active or not\n    items.forEach(i => {\n      i.setAttribute(\"tabindex\", i === activeItem ? \"0\" : \"-1\");\n      i === activeItem && i.focus();\n    });\n  }\n}\n"]}